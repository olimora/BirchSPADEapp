shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp('~/SPADE_app/SPADE')
runApp()
runApp()
runApp('~/SPADE_app/SPADE')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
library(BirchSPADE)
input_file_full = "/home/DATA/BIOINF-DATA/P2&P3/for-analyses/healthy/hBM-10n-sort-p2-concat-normalized-noCD3-CD14-CD15.fcs"
outputs_dir = "/home/moravcik/BirchSPADEapp/BirchSPADE_outputs"
markers <- c('CD10','CD34','CD19','CD20','CD22','CD27','CD38','CD45','CD138','IgM','IgD','IgA','IgG')
BirchSPADE.run.analysis(input_file_full, outputs_dir, markers, remove_outliers = F)
dir.create(outputs_dir)
library(BirchSPADE)
input_file_full = "/home/DATA/BIOINF-DATA/P2&P3/for-analyses/healthy/hBM-10n-sort-p2-concat-normalized-noCD3-CD14-CD15.fcs"
outputs_dir = "/home/moravcik/BirchSPADEapp/BirchSPADE_outputs"
markers <- c('CD10','CD34','CD19','CD20','CD22','CD27','CD38','CD45','CD138','IgM','IgD','IgA','IgG')
BirchSPADE.run.analysis(input_file_full, outputs_dir, markers, remove_outliers = F)
library(BirchSPADE)
input_file_full = "/home/DATA/BIOINF-DATA/P2&P3/for-analyses/healthy/hBM-10n-sort-p2-concat-normalized-noCD3-CD14-CD15.fcs"
outputs_dir = "/home/moravcik/BirchSPADEapp/BirchSPADE_outputs"
markers <- c('CD10','CD34','CD19','CD20','CD22','CD27','CD38','CD45','CD138','IgM','IgD','IgA','IgG')
BirchSPADE.run.analysis(input_file_full, outputs_dir, markers, remove_outliers = F, subcluster_limit = 5000)
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
setwd("..")
# get all files in P2 and P3, get 20 biggest
folder = "/home/DATA/BIOINF-DATA/P2&P3/for-analyses/"
input_files = list.files(path = folder, pattern = "\\.fcs$")
# get all files in P2 and P3, get 20 biggest
folder = "/home/DATA/BIOINF-DATA/P2&P3/for-analyses/"
input_files = list.files(path = folder, pattern = "\\.fcs$", recursive = T)
file_sizes = file.size(file.path(folder, input_files))
files_df = data.frame(input_files, file_sizes)
files_df = data.frame(input_files, file_sizes, stringsAsFactors = F)
files_df = files_df[order(-file_sizes),]
View(files_df)
# get all files in P2 and P3, get 10 biggest
folder = "/home/DATA/BIOINF-DATA/P2&P3/for-analyses/"
all_files = list.files(path = folder, pattern = "\\.fcs$", recursive = T)
file_sizes = file.size(file.path(folder, all_files))
files_df = data.frame(all_files, file_sizes, stringsAsFactors = F)
files_df = files_df[order(-file_sizes),]
input_files = files_df$input_files[1:10]
input_files = files_df$all_files[1:10]
View(files_df)
file.create("results_statistics.csv")
format(Sys.time(), "%a %b %d %X %Y")
format(Sys.time(), "%M")
format(Sys.time(), "%M %D")
format(Sys.time(), "%M %d")
format(Sys.time(), "%M/%d")
format(Sys.time(), "%M/%d:%h")
format(Sys.time(), "%M/%d:%H")
format(Sys.time(), "%M/%d:%H/%m")
format(Sys.time(), "%M/%d:%H/%M")
format(Sys.time(), "%M/%d:%H/%min")
format(Sys.time(), "%M/%d:%H/%min")
?format
format(Sys.time(), "%M/%d:%H/%M")
format(Sys.time(), "%m/%d:%H/%M")
appendResults = function(time, validity, cells_count, description) {
act_time = format(Sys.time(), "%m/%d:%H/%M")
row = paste(time, validity, cells_count, description, act_time, sep = ",")
cat(row, "results_statistics.csv",sep="\n", append=TRUE)
}
file.create("results_clustering.csv")
install.packages("clusterSim")
installed.packages("rgl")
install.packages("clusterSim")
library(clusterSim)
install.packages("clusterSim")
installed.packages("rgl")
install.packages("cvl")
install.packages("rgl")
##############
#set file name, markers
input_file <- "pBM-WM-45-sort-p2-concat-normalized-noCD3-CD14-CD15.fcs"
input_file_full = "/home/DATA/BIOINF-DATA/P2&P3/for-analyses/WM/pBM-WM-45-sort-p2-concat-normalized-noCD3-CD14-CD15.fcs"
markernames <- c('CD10', 'CD34', 'CD19', 'CD20', 'CD22', 'CD27', 'CD38', 'CD45', 'CD138', 'IgM', 'IgD', 'IgA', 'IgG')
## BIRCH downsampling to get clusters, outliers
library(flowCore)
library(spade)
in_fcs  <- SPADE.transform.FCS(SPADE.read.FCS(input_file_full, TRUE), flowCore::arcsinhTransform(a=0, b=0.2));
dff <- exprs(in_fcs)
colnames(dff) = parameters(in_fcs)@data$desc
dff = dff[,markernames]
pd <- parameters(in_fcs)@data
spade_markers = subset(pd, desc %in% markernames)$name
rm(in_fcs)
norma_options = c("none", "minmax", "meanstd")
norma = norma_options[2]
if (norma == "none") {
print("no normalization")
} else if (norma == "minmax") {
library(caret)
pp = preProcess(dff, method = "range")
dff = predict(pp, dff)
} else if (norma == "meanstd") {
dff = scale(dff)
}
subclust_lim = round(nrow(dff)/10)
start_time <- Sys.time()
birch_out = BirchTree::buildTree(dff, 10, 15, 0, cluster_size_metric = "radius",
subcluster_limit = subclust_lim, rebuild_size_factor = 2,
remove_outliers = T)
end_time <- Sys.time()
print(end_time - start_time)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
